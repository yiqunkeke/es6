{
  "_args": [
    [
      {
        "raw": "webpack-dev-middleware@3.4.0",
        "scope": null,
        "escapedName": "webpack-dev-middleware",
        "name": "webpack-dev-middleware",
        "rawSpec": "3.4.0",
        "spec": "3.4.0",
        "type": "version"
      },
      "D:\\coco\\es6-learn\\node_modules\\webpack-dev-server"
    ]
  ],
  "_from": "webpack-dev-middleware@3.4.0",
  "_hasShrinkwrap": false,
  "_id": "webpack-dev-middleware@3.4.0",
  "_location": "/webpack-dev-middleware",
  "_nodeVersion": "10.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/webpack-dev-middleware_3.4.0_1537814344006_0.27871491692630324"
  },
  "_npmUser": {
    "name": "spacek33z",
    "email": "kees@webduck.nl"
  },
  "_npmVersion": "6.4.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "webpack-dev-middleware@3.4.0",
    "scope": null,
    "escapedName": "webpack-dev-middleware",
    "name": "webpack-dev-middleware",
    "rawSpec": "3.4.0",
    "spec": "3.4.0",
    "type": "version"
  },
  "_requiredBy": [
    "/webpack-dev-server"
  ],
  "_resolved": "https://registry.npmjs.org/webpack-dev-middleware/-/webpack-dev-middleware-3.4.0.tgz",
  "_shasum": "1132fecc9026fd90f0ecedac5cbff75d1fb45890",
  "_shrinkwrap": null,
  "_spec": "webpack-dev-middleware@3.4.0",
  "_where": "D:\\coco\\es6-learn\\node_modules\\webpack-dev-server",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack/webpack-dev-middleware/issues"
  },
  "dependencies": {
    "memory-fs": "~0.4.1",
    "mime": "^2.3.1",
    "range-parser": "^1.0.3",
    "webpack-log": "^2.0.0"
  },
  "description": "A development middleware for webpack",
  "devDependencies": {
    "assert": "^1.4.1",
    "eslint": "^5.4.0",
    "eslint-config-webpack": "^1.2.5",
    "eslint-plugin-import": "^2.14.0",
    "express": "^4.14.0",
    "file-loader": "^2.0.0",
    "mocha": "^5.2.0",
    "nyc": "^12.0.2",
    "sinon": "^6.1.5",
    "standard-version": "^4.4.0",
    "supertest": "^3.1.0",
    "webpack": "^4.17.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Q9Iyc0X9dP9bAsYskAVJ/hmIZZQwf/3Sy4xCAZgL5cUkjZmUZLt4l5HpbST/Pdgjn3u6pE7u5OdGd1apgzRujA==",
    "shasum": "1132fecc9026fd90f0ecedac5cbff75d1fb45890",
    "tarball": "https://registry.npmjs.org/webpack-dev-middleware/-/webpack-dev-middleware-3.4.0.tgz",
    "fileCount": 11,
    "unpackedSize": 32706,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbqS9ICRA9TVsSAnZWagAAbPsQAILZAWvndRuCMjMoWXJo\nzIJYVVXVWrscc0HBQ+lDZkdyaww8fK9X9gA65Hf/JwERF8vAr6K8fbEjABYm\np1NnS3Zz4P4BDjpiHM1s1ZtitAxL06JjX8KmlMevTQwbEDqzWYFxaGE+9MkI\n8QFz1JkhOkQUeEH8K6/lnov07Pc8PBKKqUrteRq0FA5dSp6hO4pV1P8UY0Q4\nXnrnVWv2AdPMtoPPDE/RqN5fzlRh0Wr+hbZYAUV0CQLlEyHG0JedDkGe8RZm\nVuJ9zRPhF5gPIePGCDFP9asWnWKNwFkGMHZtO9J4rQAzI5xsO9h32EyVWZvW\nBuY0uTnlrcWtkHypidGurUQXEyfcm+nLQeOI8p9+LhTj3HB0cCKnBEL9lt9m\nS42TEaCN870sG/BOLcQwkSm+uGsr1QxVmvZQrtL2JY7bxHAtMZV1cqkfLn60\nXUO0wzrueQQu1Q8gn39SLOIJSv27WskEahr2EZTH+RIv6vHKIW0KYsokQZoa\n4V5pW/TbqoLE8jwvSMgjM7NnXBLvrESWvMC4xRjLPrYDWK+GFrASHWbNM1U7\nveA1Sh0jWgIwmQ5XkAlgeyR7iyEMPEI5/Hardo34khhhzUQQN5Z2yzU/2sVl\n59wrKG6Nmnk4ospLOEH3vsiiM3MUFw1gFYPr4Yi0T4Yvtt5y2BuTmcg3x8sg\nh6Yl\r\n=R834\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6"
  },
  "files": [
    "lib",
    "index.js"
  ],
  "gitHead": "8a5d6615fbe03e889fd58557d970c262d2e1f3e4",
  "homepage": "https://github.com/webpack/webpack-dev-middleware",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "shellscape",
      "email": "andrew@shellscape.org"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "spacek33z",
      "email": "kees@webduck.nl"
    }
  ],
  "name": "webpack-dev-middleware",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.0.0"
  },
  "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n# webpack-dev-middleware\n\nAn express-style development middleware for use with [webpack](https://webpack.js.org)\nbundles and allows for serving of the files emitted from webpack.\nThis should be used for **development only**.\n\nSome of the benefits of using this middleware include:\n\n- No files are written to disk, rather it handles files in memory\n- If files changed in watch mode, the middleware delays requests until compiling\nhas completed.\n- Supports hot module reload (HMR).\n\n## Requirements\n\nThis module requires a minimum of Node v6.9.0 and Webpack v4.0.0, and must be used with a\nserver that accepts express-style middleware.\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```console\nnpm install webpack-dev-middleware --save-dev\n```\n\n_Note: We do not recommend installing this module globally._\n\n## Usage\n\n```js\nconst webpack = require('webpack');\nconst middleware = require('webpack-dev-middleware');\nconst compiler = webpack({ .. webpack options .. });\nconst express = require('express');\nconst app = express();\n\napp.use(middleware(compiler, {\n  // webpack-dev-middleware options\n}));\n\napp.listen(3000, () => console.log('Example app listening on port 3000!'))\n```\n\n## Options\n\nThe middleware accepts an `options` Object. The following is a property reference\nfor the Object.\n\n_Note: The `publicPath` property is required, whereas all other options are optional_\n\n### methods\n\nType: `Array`  \nDefault: `[ 'GET' ]`\n\nThis property allows a user to pass the list of HTTP request methods accepted by the server. \n\n### headers\n\nType: `Object`  \nDefault: `undefined`\n\nThis property allows a user to pass custom HTTP headers on each request. eg.\n`{ \"X-Custom-Header\": \"yes\" }`\n\n### index\n\nType: `String`  \nDefault: `undefined`\n\n\"index.html\",\n// The index path for web server, defaults to \"index.html\".\n// If falsy (but not undefined), the server will not respond to requests to the root URL.\n\n\n### lazy\n\nType: `Boolean`  \nDefault: `undefined`\n\nThis option instructs the module to operate in 'lazy' mode, meaning that it won't\nrecompile when files change, but rather on each request.\n\n### logger\n\nType: `Object`  \nDefault: [`webpack-log`](https://github.com/webpack-contrib/webpack-log/blob/master/index.js)\n\nIn the rare event that a user would like to provide a custom logging interface,\nthis property allows the user to assign one. The module leverages\n[`webpack-log`](https://github.com/webpack-contrib/webpack-log#readme)\nfor creating the [`loglevelnext`](https://github.com/shellscape/loglevelnext#readme)\nlogging management by default. Any custom logger must adhere to the same\nexports for compatibility. Specifically, all custom loggers must have the\nfollowing exported methods at a minimum:\n\n- `log.trace`\n- `log.debug`\n- `log.info`\n- `log.warn`\n- `log.error`\n\nPlease see the documentation for `loglevel` for more information.\n\n### logLevel\n\nType: `String`  \nDefault: `'info'`\n\nThis property defines the level of messages that the module will log. Valid levels\ninclude:\n\n- `trace`\n- `debug`\n- `info`\n- `warn`\n- `error`\n- `silent`\n\nSetting a log level means that all other levels below it will be visible in the\nconsole. Setting `logLevel: 'silent'` will hide all console output. The module\nleverages [`webpack-log`](https://github.com/webpack-contrib/webpack-log#readme)\nfor logging management, and more information can be found on its page.\n\n### logTime\n\nType: `Boolean`  \nDefault: `false`\n\nIf `true` the log output of the module will be prefixed by a timestamp in the\n`HH:mm:ss` format.\n\n### mimeTypes\n\nType: `Object`  \nDefault: `null`\n\nThis property allows a user to register custom mime types or extension mappings.\neg. `{ 'text/html': [ 'phtml' ] }`. Please see the documentation for\n[`node-mime`](https://github.com/broofa/node-mime#mimedefine) for more information.\n\n### publicPath\n\nType: `String`  \n_Required_\n\nThe public path that the middleware is bound to. _Best Practice: use the same\n`publicPath` defined in your webpack config. For more information about\n`publicPath`, please see\n[the webpack documentation](https://webpack.js.org/guides/public-path)._\n\n### reporter\n\nType: `Object`  \nDefault: `undefined`\n\nAllows users to provide a custom reporter to handle logging within the module.\nPlease see the [default reporter](/lib/reporter.js)\nfor an example.\n\n### serverSideRender\n\nType: `Boolean`  \nDefault: `undefined`\n\nInstructs the module to enable or disable the server-side rendering mode. Please\nsee [Server-Side Rendering](#server-side-rendering) for more information.\n\n### stats\n\nType: `Object`  \nDefault: `{ context: process.cwd() }`\n\nOptions for formatting statistics displayed during and after compile. For more\ninformation and property details, please see the\n[webpack documentation](https://webpack.js.org/configuration/stats/#stats).\n\n### watchOptions\n\nType: `Object`  \nDefault: `{ aggregateTimeout: 200 }`\n\nThe module accepts an `Object` containing options for file watching, which is\npassed directly to the compiler provided. For more information on watch options\nplease see the [webpack documentation](https://webpack.js.org/configuration/watch/#watchoptions)\n\n### writeToDisk\n\nType: `Boolean|Function`  \nDefault: `false`\n\nIf true, the option will instruct the module to write files to the configured\nlocation on disk as specified in your `webpack` config file. _Setting\n`writeToDisk: true` won't change the behavior of the `webpack-dev-middleware`,\nand bundle files accessed through the browser will still be served from memory._\nThis option provides the same capabilities as the\n[`WriteFilePlugin`](https://github.com/gajus/write-file-webpack-plugin/pulls).\n\nThis option also accepts a `Function` value, which can be used to filter which\nfiles are written to disk. The function follows the same premise as\n[`Array#filter`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\nin which a return value of `false` _will not_ write the file, and a return value\nof `true` _will_ write the file to disk. eg.\n\n```js\n{\n  writeToDisk: (filePath) {\n    return /superman\\.css$/.test(filePath);\n  }\n}\n```\n\n## API\n\n`webpack-dev-middleware` also provides convenience methods that can be use to\ninteract with the middleware at runtime:\n\n### `close(callback)`\n\nInstructs a webpack-dev-middleware instance to stop watching for file changes.\n\n### Parameters\n\n#### callback\n\nType: `Function`\n\nA function executed once the middleware has stopped watching.\n\n### `invalidate()`\n\nInstructs a webpack-dev-middleware instance to recompile the bundle.\ne.g. after a change to the configuration.\n\n```js\nconst webpack = require('webpack');\nconst compiler = webpack({ ... });\nconst middleware = require('webpack-dev-middleware');\nconst instance = middleware(compiler);\n\napp.use(instance);\n\nsetTimeout(() => {\n  // After a short delay the configuration is changed and a banner plugin is added\n  // to the config\n  compiler.apply(new webpack.BannerPlugin('A new banner'));\n\n  // Recompile the bundle with the banner plugin:\n  instance.invalidate();\n}, 1000);\n```\n\n### `waitUntilValid(callback)`\n\nExecutes a callback function when the compiler bundle is valid, typically after\ncompilation.\n\n### Parameters\n\n#### callback\n\nType: `Function`\n\nA function executed when the bundle becomes valid. If the bundle is\nvalid at the time of calling, the callback is executed immediately.\n\n```js\nconst webpack = require('webpack');\nconst compiler = webpack({ ... });\nconst middleware = require('webpack-dev-middleware');\nconst instance = middleware(compiler);\n\napp.use(instance);\n\ninstance.waitUntilValid(() => {\n  console.log('Package is in a valid state');\n});\n```\n## Known Issues\n\n### Multiple Successive Builds\n\nWatching (by means of `lazy: false`) will frequently cause multiple compilations\nas the bundle changes during compilation. This is due in part to cross-platform\ndifferences in file watchers, so that webpack doesn't loose file changes when\nwatched files change rapidly. If you run into this situation, please make use of\nthe [`TimeFixPlugin`](https://github.com/egoist/time-fix-plugin).\n\n## Server-Side Rendering\n\n_Note: this feature is experimental and may be removed or changed completely in the future._\n\nIn order to develop an app using server-side rendering, we need access to the\n[`stats`](https://github.com/webpack/docs/wiki/node.js-api#stats), which is\ngenerated with each build.\n\nWith server-side rendering enabled, `webpack-dev-middleware` sets the `stat` to\n`res.locals.webpackStats` and the memory filesystem to `res.locals.fs` before invoking the next middleware, allowing a\ndeveloper to render the page body and manage the response to clients.\n\n_Note: Requests for bundle files will still be handled by\n`webpack-dev-middleware` and all requests will be pending until the build\nprocess is finished with server-side rendering enabled._\n\nExample Implementation:\n\n```js\nconst webpack = require('webpack');\nconst compiler = webpack({ ... });\nconst isObject = require('is-object');\nconst middleware = require('webpack-dev-middleware');\n\n// This function makes server rendering of asset references consistent with different webpack chunk/entry configurations\nfunction normalizeAssets(assets) {\n  if (isObject(assets)) {\n    return Object.values(assets)\n  }\n  return Array.isArray(assets) ? assets : [assets]\n}\n\napp.use(middleware(compiler, { serverSideRender: true }))\n\n// The following middleware would not be invoked until the latest build is finished.\napp.use((req, res) => {\n  const assetsByChunkName = res.locals.webpackStats.toJson().assetsByChunkName\n  const fs = res.locals.fs\n  const outputPath = res.locals.webpackStats.toJson().outputPath\n\n  // then use `assetsByChunkName` for server-sider rendering\n  // For example, if you have only one main chunk:\n  res.send(`\n<html>\n  <head>\n    <title>My App</title>\n    <style>\n\t\t${normalizeAssets(assetsByChunkName.main)\n\t\t\t  .filter(path => path.endsWith('.css'))\n\t\t\t  .map(path => fs.readFileSync(outputPath + '/' + path))\n\t\t\t  .join('\\n')}\n    </style>\n  </head>\n  <body>\n    <div id=\"root\"></div>\n\t\t${normalizeAssets(assetsByChunkName.main)\n\t\t\t  .filter(path => path.endsWith('.js'))\n\t\t\t  .map(path => `<script src=\"${path}\"></script>`)\n\t\t\t  .join('\\n')}\n  </body>\n</html>\n  `)\n\n})\n```\n\n## Support\n\nWe do our best to keep Issues in the repository focused on bugs, features, and\nneeded modifications to the code for the module. Because of that, we ask users\nwith general support, \"how-to\", or \"why isn't this working\" questions to try one\nof the other support channels that are available.\n\nYour first-stop-shop for support for webpack-dev-server should by the excellent\n[documentation][docs-url] for the module. If you see an opportunity for improvement\nof those docs, please head over to the [webpack.js.org repo][wjo-url] and open a\npull request.\n\nFrom there, we encourage users to visit the [webpack Gitter chat][chat-url] and\ntalk to the fine folks there. If your quest for answers comes up dry in chat,\nhead over to [StackOverflow][stack-url] and do a quick search or open a new\nquestion. Remember; It's always much easier to answer questions that include your\n`webpack.config.js` and relevant files!\n\nIf you're twitter-savvy you can tweet [#webpack][hash-url] with your question\nand someone should be able to reach out and lend a hand.\n\nIf you have discovered a :bug:, have a feature suggestion, of would like to see\na modification, please feel free to create an issue on Github. _Note: The issue\ntemplate isn't optional, so please be sure not to remove it, and please fill it\nout completely._\n\n## Contributing\n\nWe welcome your contributions! Please have a read of [CONTRIBUTING.md](CONTRIBUTING.md) for more information on how to get involved.\n\n## Maintainers\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img src=\"https://avatars.githubusercontent.com/SpaceK33z?v=4&s=150\">\n        <br />\n        <a href=\"https://github.com/SpaceK33z\">Kees Kluskens</a>\n      </td>\n      <td align=\"center\">\n        <img src=\"https://i.imgur.com/4v6pgxh.png\">\n        <br />\n        <a href=\"https://github.com/shellscape\">Andrew Powell</a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/webpack-dev-middleware.svg\n[npm-url]: https://npmjs.com/package/webpack-dev-middleware\n\n[node]: https://img.shields.io/node/v/webpack-dev-middleware.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack/webpack-dev-middleware.svg\n[deps-url]: https://david-dm.org/webpack/webpack-dev-middleware\n\n[tests]: http://img.shields.io/travis/webpack/webpack-dev-middleware.svg\n[tests-url]: https://travis-ci.org/webpack/webpack-dev-middleware\n\n[cover]: https://codecov.io/gh/webpack/webpack-dev-middleware/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack/webpack-dev-middleware\n\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n\n[docs-url]: https://webpack.js.org/guides/development/#using-webpack-dev-middleware\n[hash-url]: https://twitter.com/search?q=webpack\n[middleware-url]: https://github.com/webpack/webpack-dev-middleware\n[stack-url]: https://stackoverflow.com/questions/tagged/webpack-dev-middleware\n[uglify-url]: https://github.com/webpack-contrib/uglifyjs-webpack-plugin\n[wjo-url]: https://github.com/webpack/webpack.js.org\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack/webpack-dev-middleware.git"
  },
  "scripts": {
    "lint": "eslint index.js lib test",
    "release": "standard-version",
    "test": "nyc --reporter lcovonly mocha --full-trace --check-leaks --exit"
  },
  "version": "3.4.0"
}
