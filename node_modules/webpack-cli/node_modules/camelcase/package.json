{
  "_args": [
    [
      {
        "raw": "camelcase@^5.0.0",
        "scope": null,
        "escapedName": "camelcase",
        "name": "camelcase",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "D:\\coco\\es6-learn\\node_modules\\webpack-cli\\node_modules\\yargs-parser"
    ]
  ],
  "_from": "camelcase@>=5.0.0 <6.0.0",
  "_id": "camelcase@5.0.0",
  "_inCache": true,
  "_location": "/webpack-cli/camelcase",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/camelcase_5.0.0_1522235314616_0.509666479685914"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "camelcase@^5.0.0",
    "scope": null,
    "escapedName": "camelcase",
    "name": "camelcase",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-cli/yargs-parser"
  ],
  "_resolved": "https://registry.npmjs.org/camelcase/-/camelcase-5.0.0.tgz",
  "_shasum": "03295527d58bd3cd4aa75363f35b2e8d97be2f42",
  "_shrinkwrap": null,
  "_spec": "camelcase@^5.0.0",
  "_where": "D:\\coco\\es6-learn\\node_modules\\webpack-cli\\node_modules\\yargs-parser",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/camelcase/issues"
  },
  "dependencies": {},
  "description": "Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`",
  "devDependencies": {
    "ava": "*",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-faqwZqnWxbxn+F1d399ygeamQNy3lPp/H9H6rNrqYh4FSVCtcY+3cub1MxA8o9mDd55mM8Aghuu/kuyYA6VTsA==",
    "shasum": "03295527d58bd3cd4aa75363f35b2e8d97be2f42",
    "tarball": "https://registry.npmjs.org/camelcase/-/camelcase-5.0.0.tgz",
    "fileCount": 4,
    "unpackedSize": 5089
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "a526ef0399f9a1310eaacafa0ae4a69da4a2f1ad",
  "homepage": "https://github.com/sindresorhus/camelcase#readme",
  "keywords": [
    "camelcase",
    "camel-case",
    "camel",
    "case",
    "dash",
    "hyphen",
    "dot",
    "underscore",
    "separator",
    "string",
    "text",
    "convert",
    "pascalcase",
    "pascal-case"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "camelcase",
  "optionalDependencies": {},
  "readme": "# camelcase [![Build Status](https://travis-ci.org/sindresorhus/camelcase.svg?branch=master)](https://travis-ci.org/sindresorhus/camelcase)\n\n> Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`\n\n\n## Install\n\n```\n$ npm install camelcase\n```\n\n\n## Usage\n\n```js\nconst camelCase = require('camelcase');\n\ncamelCase('foo-bar');\n//=> 'fooBar'\n\ncamelCase('foo_bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar');\n//=> 'fooBar'\n\ncamelCase('Foo-Bar', {pascalCase: true});\n//=> 'FooBar'\n\ncamelCase('--foo.bar', {pascalCase: false});\n//=> 'fooBar'\n\ncamelCase('foo bar');\n//=> 'fooBar'\n\nconsole.log(process.argv[3]);\n//=> '--foo-bar'\ncamelCase(process.argv[3]);\n//=> 'fooBar'\n\ncamelCase(['foo', 'bar']);\n//=> 'fooBar'\n\ncamelCase(['__foo__', '--bar'], {pascalCase: true});\n//=> 'FooBar'\n```\n\n\n## API\n\n### camelCase(input, [options])\n\n#### input\n\nType: `string` `string[]`\n\nString to convert to camel case.\n\n#### options\n\nType: `Object`\n\n##### pascalCase\n\nType: `boolean`<br>\nDefault: `false`\n\nUppercase the first character: `foo-bar` → `FooBar`\n\n\n## Related\n\n- [decamelize](https://github.com/sindresorhus/decamelize) - The inverse of this module\n- [uppercamelcase](https://github.com/SamVerschueren/uppercamelcase) - Like this module, but to PascalCase instead of camelCase\n- [titleize](https://github.com/sindresorhus/titleize) - Capitalize every word in string\n- [humanize-string](https://github.com/sindresorhus/humanize-string) - Convert a camelized/dasherized/underscored string into a humanized one\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/camelcase.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "5.0.0"
}
