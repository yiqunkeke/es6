{
  "_args": [
    [
      {
        "raw": "connect-history-api-fallback@^1.3.0",
        "scope": null,
        "escapedName": "connect-history-api-fallback",
        "name": "connect-history-api-fallback",
        "rawSpec": "^1.3.0",
        "spec": ">=1.3.0 <2.0.0",
        "type": "range"
      },
      "D:\\coco\\es6-learn\\node_modules\\webpack-dev-server"
    ]
  ],
  "_from": "connect-history-api-fallback@^1.3.0",
  "_hasShrinkwrap": false,
  "_id": "connect-history-api-fallback@1.6.0",
  "_location": "/connect-history-api-fallback",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/connect-history-api-fallback_1.6.0_1546936380183_0.5015516416248609"
  },
  "_npmUser": {
    "name": "bripkens",
    "email": "bripkens.dev@gmail.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "connect-history-api-fallback@^1.3.0",
    "scope": null,
    "escapedName": "connect-history-api-fallback",
    "name": "connect-history-api-fallback",
    "rawSpec": "^1.3.0",
    "spec": ">=1.3.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/webpack-dev-server"
  ],
  "_resolved": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",
  "_shasum": "8b32089359308d111115d81cad3fceab888f97bc",
  "_shrinkwrap": null,
  "_spec": "connect-history-api-fallback@^1.3.0",
  "_where": "D:\\coco\\es6-learn\\node_modules\\webpack-dev-server",
  "author": {
    "name": "Ben Ripkens",
    "email": "bripkens.dev@gmail.com",
    "url": "http://bripkens.de"
  },
  "bugs": {
    "url": "https://github.com/bripkens/connect-history-api-fallback/issues"
  },
  "contributors": [
    {
      "name": "Craig Myles",
      "email": "cr@igmyles.com",
      "url": "http://www.craigmyles.com"
    }
  ],
  "dependencies": {},
  "description": "Provides a fallback for non-existing directories so that the HTML 5 history API can be used.",
  "devDependencies": {
    "eslint": "^0.18.0",
    "nodeunit": "^0.11.3",
    "sinon": "^1.14.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-e54B99q/OUoH64zYYRf3HBP5z24G38h5D3qXu23JGRoigpX5Ss4r9ZnDk3g0Z8uQC2x2lPaJ+UlWBc1ZWBWdLg==",
    "shasum": "8b32089359308d111115d81cad3fceab888f97bc",
    "tarball": "https://registry.npmjs.org/connect-history-api-fallback/-/connect-history-api-fallback-1.6.0.tgz",
    "fileCount": 5,
    "unpackedSize": 11523,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcNGA8CRA9TVsSAnZWagAAz7EQAJJKxgDIse2UDKLjTFVq\niMD+V5XHO0KDlr+VmT7ayhr05u9ID1cgfWaWBr07JD3IWGmtUNdCjYIu2p+Y\nFilsPW94ta/mEUgVUUHx2RDLFlNz/sDQBiCKcgcSqGosqZaYeEXSVm9LoUD0\nPc2PHb/AJa4LS8h3B4UyNcBa2sk+X3FQ9AlDs8c6o729KI386SpNYVyVhs8h\nZzIcyPI9j2jY/4KpWWgkSKQ7naWebpoGhm5a9r6USiB6PwPD0hEWvgSzAmra\nd42HowhHElHnnnjq9cyrmOo4knCXdeoxXnxNqy8JVYVrAAb7TDyIv4/E4hJg\nZOFiKmxp4SAViZLmZhFVBYE1TtvdoVhKCHLTjIG8mc0Gq3xL1bATmNqdZyWv\nC5z10F7+nmduh89tC/n7cI1NoY6vy7u/3jv/crcPgBlev1wACBkfmWigx1+6\n8mFBudDPS/2tRk9LCDgcyi2RMbiuaUz1RUVSC1t8Gxwjo6PHH5ViZYRHtXWl\nqNavg7Bmsc5FhFQ/s700h27nAAtuhtxni73Nk1GfJsOW3g9rro/zXgFpujv+\nO9OhSJSyZKu4oOfP16OD1KbUiKjvmVm1I2NG2GC0oI+8juFh/8oRCF6hkwCD\nQwLGCMnJ9QpPYmfjUb8ZF5nDiaI4cdiNL44ld32MVXrmiLOyJQm6K+joyTEO\nhKnS\r\n=9k/a\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.8"
  },
  "files": [
    "lib"
  ],
  "gitHead": "5d3a83e22f7d8994106b50ff19242b7739938525",
  "homepage": "https://github.com/bripkens/connect-history-api-fallback#readme",
  "keyswords": [
    "connect",
    "html5",
    "history api",
    "fallback",
    "spa"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "bripkens",
      "email": "bripkens.dev@gmail.com"
    }
  ],
  "name": "connect-history-api-fallback",
  "optionalDependencies": {},
  "readme": "<h1 align=\"center\">connect-history-api-fallback</h1>\n<p align=\"center\">Middleware to proxy requests through a specified index page, useful for Single Page Applications that utilise the HTML5 History API.</p>\n\n[![Build Status](https://travis-ci.org/bripkens/connect-history-api-fallback.svg?branch=master)](https://travis-ci.org/bripkens/connect-history-api-fallback)\n[![Dependency Status](https://david-dm.org/bripkens/connect-history-api-fallback/master.svg)](https://david-dm.org/bripkens/connect-history-api-fallback/master)\n\n[![NPM](https://nodei.co/npm/connect-history-api-fallback.png?downloads=true&downloadRank=true)](https://nodei.co/npm/connect-history-api-fallback/)\n\n\n<h2>Table of Contents</h2>\n\n<!-- TOC depthFrom:2 depthTo:6 withLinks:1 updateOnSave:1 orderedList:0 -->\n\n- [Introduction](#introduction)\n- [Usage](#usage)\n- [Options](#options)\n\t- [index](#index)\n\t- [rewrites](#rewrites)\n\t- [verbose](#verbose)\n\t- [htmlAcceptHeaders](#htmlacceptheaders)\n\t- [disableDotRule](#disabledotrule)\n\n<!-- /TOC -->\n\n## Introduction\n\nSingle Page Applications (SPA) typically only utilise one index file that is\naccessible by web browsers: usually `index.html`. Navigation in the application\nis then commonly handled using JavaScript with the help of the\n[HTML5 History API](http://www.w3.org/html/wg/drafts/html/master/single-page.html#the-history-interface).\nThis results in issues when the user hits the refresh button or is directly\naccessing a page other than the landing page, e.g. `/help` or `/help/online`\nas the web server bypasses the index file to locate the file at this location.\nAs your application is a SPA, the web server will fail trying to retrieve the file and return a *404 - Not Found*\nmessage to the user.\n\nThis tiny middleware addresses some of the issues. Specifically, it will change\nthe requested location to the index you specify (default being `/index.html`)\nwhenever there is a request which fulfills the following criteria:\n\n 1. The request is a GET request\n 2. which accepts `text/html`,\n 3. is not a direct file request, i.e. the requested path does not contain a\n    `.` (DOT) character and\n 4. does not match a pattern provided in options.rewrites (see options below)\n\n## Usage\n\nThe middleware is available through NPM and can easily be added.\n\n```\nnpm install --save connect-history-api-fallback\n```\n\nImport the library\n\n```javascript\nvar history = require('connect-history-api-fallback');\n```\n\nNow you only need to add the middleware to your application like so\n\n```javascript\nvar connect = require('connect');\n\nvar app = connect()\n  .use(history())\n  .listen(3000);\n```\n\nOf course you can also use this piece of middleware with express:\n\n```javascript\nvar express = require('express');\n\nvar app = express();\napp.use(history());\n```\n\n## Options\nYou can optionally pass options to the library when obtaining the middleware\n\n```javascript\nvar middleware = history({});\n```\n\n### index\nOverride the index (default `/index.html`)\n\n```javascript\nhistory({\n  index: '/default.html'\n});\n```\n\n### rewrites\nOverride the index when the request url matches a regex pattern. You can either rewrite to a static string or use a function to transform the incoming request.\n\nThe following will rewrite a request that matches the `/\\/soccer/` pattern to `/soccer.html`.\n```javascript\nhistory({\n  rewrites: [\n    { from: /\\/soccer/, to: '/soccer.html'}\n  ]\n});\n```\n\nAlternatively functions can be used to have more control over the rewrite process. For instance, the following listing shows how requests to `/libs/jquery/jquery.1.12.0.min.js` and the like can be routed to `./bower_components/libs/jquery/jquery.1.12.0.min.js`. You can also make use of this if you have an API version in the URL path.\n```javascript\nhistory({\n  rewrites: [\n    {\n      from: /^\\/libs\\/.*$/,\n      to: function(context) {\n        return '/bower_components' + context.parsedUrl.pathname;\n      }\n    }\n  ]\n});\n```\n\nThe function will always be called with a context object that has the following properties:\n\n - **parsedUrl**: Information about the URL as provided by the [URL module's](https://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost) `url.parse`.\n - **match**: An Array of matched results as provided by `String.match(...)`.\n - **request**: The HTTP request object.\n\n\n### verbose\nThis middleware does not log any information by default. If you wish to activate logging, then you can do so via the `verbose` option or by specifying a logger function.\n\n```javascript\nhistory({\n  verbose: true\n});\n```\n\nAlternatively use your own logger\n\n```javascript\nhistory({\n  logger: console.log.bind(console)\n});\n```\n\n### htmlAcceptHeaders\nOverride the default `Accepts:` headers that are queried when matching HTML content requests (Default: `['text/html', '*/*']`).\n\n```javascript\nhistory({\n  htmlAcceptHeaders: ['text/html', 'application/xhtml+xml']\n})\n```\n\n### disableDotRule\nDisables the dot rule mentioned above:\n\n> […] is not a direct file request, i.e. the requested path does not contain a `.` (DOT) character […]\n\n```javascript\nhistory({\n  disableDotRule: true\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/bripkens/connect-history-api-fallback.git"
  },
  "scripts": {
    "test": "eslint lib/index.js test/index_test.js && nodeunit test/index_test.js"
  },
  "version": "1.6.0"
}
