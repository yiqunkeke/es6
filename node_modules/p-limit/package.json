{
  "_args": [
    [
      {
        "raw": "p-limit@^2.0.0",
        "scope": null,
        "escapedName": "p-limit",
        "name": "p-limit",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "D:\\coco\\es6-learn\\node_modules\\p-locate"
    ]
  ],
  "_from": "p-limit@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "p-limit@2.1.0",
  "_location": "/p-limit",
  "_nodeVersion": "11.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/p-limit_2.1.0_1545747377882_0.09658731145738386"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-limit@^2.0.0",
    "scope": null,
    "escapedName": "p-limit",
    "name": "p-limit",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/p-locate"
  ],
  "_resolved": "https://registry.npmjs.org/p-limit/-/p-limit-2.1.0.tgz",
  "_shasum": "1d5a0d20fb12707c758a655f6bbc4386b5930d68",
  "_shrinkwrap": null,
  "_spec": "p-limit@^2.0.0",
  "_where": "D:\\coco\\es6-learn\\node_modules\\p-locate",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-limit/issues"
  },
  "dependencies": {
    "p-try": "^2.0.0"
  },
  "description": "Run multiple promise-returning & async functions with limited concurrency",
  "devDependencies": {
    "ava": "^1.0.1",
    "delay": "^4.1.0",
    "in-range": "^1.0.0",
    "random-int": "^1.0.0",
    "time-span": "^2.0.0",
    "xo": "^0.23.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-NhURkNcrVB+8hNfLuysU8enY5xn2KXphsHBaC2YmRNTZRc7RWusw6apSpdEj3jo4CMb6W9nrF6tTnsJsJeyu6g==",
    "shasum": "1d5a0d20fb12707c758a655f6bbc4386b5930d68",
    "tarball": "https://registry.npmjs.org/p-limit/-/p-limit-2.1.0.tgz",
    "fileCount": 4,
    "unpackedSize": 5046,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcIjuyCRA9TVsSAnZWagAA9KMP/R+lPLjx3+1/0HBOwvic\nj8F3y4kedwqOfpPoPYSmMYV1WCOe/TI/g9Q3+WGscEIrZvMohwy/E5PexakR\nYaPWkSoXGQ9ikVxHBSOtL88YssvjbttS3ZukgdUyx9andMLsBwXrzDlXix5O\n5VG5i0BzU2L+nkc2+IvNfBkUxLY8+OKJdlbgA6HXWUej+yY2+oYFGXAhE4Dt\nTnMZC4otdpefUynsoyd5n8xFVjaw/cgdrABFgFsLGOPnhP42+EkcHA1oH31U\n7tpJgKQi6AQ8bojlV/sZmMrBZ4bh3EKnw1LkgLK5gx/kd5Wd03YwfmLtPF0L\n4L6nqleRM2aY3gc7Bc1kcLaA4vqnhSh30s41F4SVZgPU/mMvNELI20iHRZw/\nCrv9XB8jWVEx9WDTrKhyiiOPX93NyG7KqxgSo1QQp/ASrMHmtAcwKjG3o0O7\nobAlO3CwXNMe1aF9q5LqIZVyWaQaGGlT7LMkvIQbg/xbTUcQYu25hsCF6vSZ\nj0M6YtepH4fmhbZXGLaqQzTfAQB6B12NUNWK9Z3W4gK5nSFh7Ysh1wcfrZUx\nTxKq6a/RWfxeKbBzb2fMUkeXorwwASzmmTtXGzNANq08GZXNFzz1ozclBI/b\nPv5FuzHpeiy7M0TrRLRii0nYQhxD3t+RnN4LlPfPjt697Ak1GdYOQFx5scLX\nYDwh\r\n=QeA7\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "8517860c047c5fc485d92879bfc01952e1417d19",
  "homepage": "https://github.com/sindresorhus/p-limit#readme",
  "keywords": [
    "promise",
    "limit",
    "limited",
    "concurrency",
    "throttle",
    "throat",
    "rate",
    "batch",
    "ratelimit",
    "task",
    "queue",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "p-limit",
  "optionalDependencies": {},
  "readme": "# p-limit [![Build Status](https://travis-ci.org/sindresorhus/p-limit.svg?branch=master)](https://travis-ci.org/sindresorhus/p-limit)\n\n> Run multiple promise-returning & async functions with limited concurrency\n\n\n## Install\n\n```\n$ npm install p-limit\n```\n\n\n## Usage\n\n```js\nconst pLimit = require('p-limit');\n\nconst limit = pLimit(1);\n\nconst input = [\n\tlimit(() => fetchSomething('foo')),\n\tlimit(() => fetchSomething('bar')),\n\tlimit(() => doSomething())\n];\n\n(async () => {\n\t// Only one promise is run at once\n\tconst result = await Promise.all(input);\n\tconsole.log(result);\n})();\n```\n\n\n## API\n\n### pLimit(concurrency)\n\nReturns a `limit` function.\n\n#### concurrency\n\nType: `number`<br>\nMinimum: `1`\n\nConcurrency limit.\n\n### limit(fn, ...args)\n\nReturns the promise returned by calling `fn(...args)`.\n\n#### fn\n\nType: `Function`\n\nPromise-returning/async function.\n\n#### ...args\n\nAny arguments to pass through to `fn`.\n\nSupport for passing arguments on to the `fn` is provided in order to be able to avoid creating unnecessary closures. You probably don't need this optimization unless you're pushing a *lot* of functions.\n\n### limit.activeCount\n\nThe number of promises that are currently running.\n\n### limit.pendingCount\n\nThe number of promises that are waiting to run (i.e. their internal `fn` was not called yet).\n\n\n## FAQ\n\n### How is this different from the [`p-queue`](https://github.com/sindresorhus/p-queue) package?\n\nThis package is only about limiting the number of concurrent executions, while `p-queue` is a fully featured queue implementation with lots of different options, introspection, and ability to pause and clear the queue.\n\n\n## Related\n\n- [p-queue](https://github.com/sindresorhus/p-queue) - Promise queue with concurrency control\n- [p-throttle](https://github.com/sindresorhus/p-throttle) - Throttle promise-returning & async functions\n- [p-debounce](https://github.com/sindresorhus/p-debounce) - Debounce promise-returning & async functions\n- [p-all](https://github.com/sindresorhus/p-all) - Run promise-returning & async functions concurrently with optional limited concurrency\n- [More…](https://github.com/sindresorhus/promise-fun)\n\n\n## License\n\nMIT © [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-limit.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "2.1.0"
}
