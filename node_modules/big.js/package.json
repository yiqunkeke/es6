{
  "_args": [
    [
      {
        "raw": "big.js@^5.2.2",
        "scope": null,
        "escapedName": "big.js",
        "name": "big.js",
        "rawSpec": "^5.2.2",
        "spec": ">=5.2.2 <6.0.0",
        "type": "range"
      },
      "D:\\coco\\es6-learn\\node_modules\\loader-utils"
    ]
  ],
  "_from": "big.js@^5.2.2",
  "_hasShrinkwrap": false,
  "_id": "big.js@5.2.2",
  "_location": "/big.js",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/big.js_5.2.2_1539859966247_0.4536733471360548"
  },
  "_npmUser": {
    "name": "mikemcl",
    "email": "M8ch88l@gmail.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "big.js@^5.2.2",
    "scope": null,
    "escapedName": "big.js",
    "name": "big.js",
    "rawSpec": "^5.2.2",
    "spec": ">=5.2.2 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/loader-utils"
  ],
  "_resolved": "https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz",
  "_shasum": "65f0af382f578bcdc742bd9c281e9cb2d7768328",
  "_shrinkwrap": null,
  "_spec": "big.js@^5.2.2",
  "_where": "D:\\coco\\es6-learn\\node_modules\\loader-utils",
  "author": {
    "name": "Michael Mclaughlin",
    "email": "M8ch88l@gmail.com"
  },
  "browser": "big.js",
  "bugs": {
    "url": "https://github.com/MikeMcl/big.js/issues"
  },
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/bigjs"
  },
  "dependencies": {},
  "description": "A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-vyL2OymJxmarO8gxMr0mhChsO9QGwhynfuu4+MHTAW6czfq9humCB7rKpUjDd9YUiDPU4mzpyupFSvOClAwbmQ==",
    "shasum": "65f0af382f578bcdc742bd9c281e9cb2d7768328",
    "tarball": "https://registry.npmjs.org/big.js/-/big.js-5.2.2.tgz",
    "fileCount": 7,
    "unpackedSize": 63868,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbyGX+CRA9TVsSAnZWagAAMVkP/0i7Uxy+BYPfzIwv0ZCE\nxZYqjdM46sToRgTVzoY5T0/pm0Cx9APg4+XHRTCKV/7/jx9aZyxYMboxaVVE\nPwEj+0580L/Rw9ymbrOagveg5lnEwXQunpCQD9OvCHlDJkQU6udeRnW9r67o\nq6drSuhCT+6b2l/PAxmbN7V8hYjhf9+1zwVNOAdGJ9o3//UCVNvMovX5Omz8\nzdROqXsuqb0L0KiqLjkNDI3VkYiRHTU2aSPQBOySa4TnBB2sr23N5N2YUylA\nB1Ouwi1Rm05F/IPpPMuOOUPzoZ29lKqOVHxVfNBHt0yg9unCI3+75YP614jz\nNoRebWIvcvlDOn6OLpc64D7uywygkudMVbeHQaps59e7ATzsRohqm2hwmEIt\nL9d9yFgAV9ypIi61P5R5cNaawalrXGAGUB0gSnyzbOpsfIj9B2qDSG9+G8Zw\nPb5xYt3B3Lh2+zLYBKToIkJPZxtuKK0949PpUkbVM0yF2m3DqT0tGsfl4Iq1\nrM0bGg1+6EuyJs5o47jJP4CfE1vQlC/LcZGedMQNbPm7Av4xoV5QAhJjJdcq\nTz6lMa1/CFy6tfbCmm+MRH3jGrrM8dN78PyWZLQmeM3Jc+ltYjYbl6j/5w0a\ncpNN0CZ9H43uyFszbFwI+2OS48WtAiAbqHE8tXFMJty7DHQNaOfurGDbnL3h\niov9\r\n=O4RU\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": "*"
  },
  "files": [
    "big.js",
    "big.mjs",
    "big.min.js"
  ],
  "gitHead": "01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4",
  "homepage": "https://github.com/MikeMcl/big.js#readme",
  "keywords": [
    "arbitrary",
    "precision",
    "arithmetic",
    "big",
    "number",
    "decimal",
    "float",
    "biginteger",
    "bigdecimal",
    "bignumber",
    "bigint",
    "bignum"
  ],
  "license": "MIT",
  "main": "big",
  "maintainers": [
    {
      "name": "mikemcl",
      "email": "M8ch88l@gmail.com"
    }
  ],
  "module": "big.mjs",
  "name": "big.js",
  "optionalDependencies": {},
  "readme": "# big.js\r\n\r\n**A small, fast JavaScript library for arbitrary-precision decimal arithmetic.**\r\n\r\nThe little sister to [bignumber.js](https://github.com/MikeMcl/bignumber.js/) and [decimal.js](https://github.com/MikeMcl/decimal.js/). See [here](https://github.com/MikeMcl/big.js/wiki) for some notes on the difference between them.\r\n\r\n## Features\r\n\r\n  - Faster, smaller and easier-to-use than JavaScript versions of Java's BigDecimal\r\n  - Only 5.9 KB minified and 2.7 KB gzipped\r\n  - Simple API\r\n  - Replicates the `toExponential`, `toFixed` and `toPrecision` methods of JavaScript's Number type\r\n  - Includes a `sqrt` method\r\n  - Stores values in an accessible decimal floating point format\r\n  - No dependencies\r\n  - Comprehensive [documentation](http://mikemcl.github.io/big.js/) and test set\r\n\r\n## Set up\r\n\r\nThe library is the single JavaScript file *big.js* (or *big.min.js*, which is *big.js* minified).\r\n\r\nBrowser:\r\n\r\n```html\r\n<script src='path/to/big.js'></script>\r\n```\r\n\r\n[Node.js](http://nodejs.org):\r\n\r\n```bash\r\n$ npm install big.js\r\n```\r\n\r\n```javascript\r\nconst Big = require('big.js');\r\n```\r\n\r\nES6 module:\r\n\r\n```javascript\r\nimport Big from 'big.mjs';\r\n```\r\n## Use\r\n\r\n*In all examples below, `var`, semicolons and `toString` calls are not shown. If a commented-out value is in quotes it means `toString` has been called on the preceding expression.*\r\n\r\nThe library exports a single function, `Big`, the constructor of Big number instances.\r\nIt accepts a value of type number, string or Big number object.\r\n\r\n    x = new Big(123.4567)\r\n    y = Big('123456.7e-3')             // 'new' is optional\r\n    z = new Big(x)\r\n    x.eq(y) && x.eq(z) && y.eq(z)      // true\r\n\r\nA Big number is immutable in the sense that it is not changed by its methods.\r\n\r\n    0.3 - 0.1                          // 0.19999999999999998\r\n    x = new Big(0.3)\r\n    x.minus(0.1)                       // \"0.2\"\r\n    x                                  // \"0.3\"\r\n\r\nThe methods that return a Big number can be chained.\r\n\r\n    x.div(y).plus(z).times(9).minus('1.234567801234567e+8').plus(976.54321).div('2598.11772')\r\n    x.sqrt().div(y).pow(3).gt(y.mod(z))    // true\r\n\r\nLike JavaScript's Number type, there are `toExponential`, `toFixed` and `toPrecision` methods.\r\n\r\n    x = new Big(255.5)\r\n    x.toExponential(5)                 // \"2.55500e+2\"\r\n    x.toFixed(5)                       // \"255.50000\"\r\n    x.toPrecision(5)                   // \"255.50\"\r\n\r\nThe arithmetic methods always return the exact result except `div`, `sqrt` and `pow`\r\n(with negative exponent), as these methods involve division.\r\n\r\nThe maximum number of decimal places and the rounding mode used to round the results of these methods is determined by the value of the `DP` and `RM` properties of the `Big` number constructor.\r\n\r\n    Big.DP = 10\r\n    Big.RM = 1\r\n\r\n    x = new Big(2);\r\n    y = new Big(3);\r\n    z = x.div(y)                       // \"0.6666666667\"\r\n    z.sqrt()                           // \"0.8164965809\"\r\n    z.pow(-3)                          // \"3.3749999995\"\r\n    z.times(z)                         // \"0.44444444448888888889\"\r\n    z.times(z).round(10)               // \"0.4444444445\"\r\n\r\nMultiple Big number constructors can be created, each with an independent configuration.\r\n\r\nThe value of a Big number is stored in a decimal floating point format in terms of a coefficient, exponent and sign.\r\n\r\n    x = new Big(-123.456);\r\n    x.c                                // [1,2,3,4,5,6]    coefficient (i.e. significand)\r\n    x.e                                // 2                exponent\r\n    x.s                                // -1               sign\r\n\r\nFor further information see the [API](http://mikemcl.github.io/big.js/) reference from the *doc* folder.\r\n\r\n## Test\r\n\r\nThe *test* directory contains the test scripts for each Big number method.\r\n\r\nThe tests can be run with Node.js or a browser.\r\n\r\nTo run all the tests\r\n\r\n    $ npm test\r\n\r\nTo test a single method\r\n\r\n    $ node test/toFixed\r\n\r\nFor the browser, see *single-test.html* and *every-test.html* in the *test/browser* directory.\r\n\r\n*big-vs-number.html* is a simple application that enables some of the methods of big.js to be compared with those of JavaScript's Number type.\r\n\r\n## Performance\r\n\r\nThe *perf* directory contains two legacy applications and a *lib* directory containing the BigDecimal libraries used by both.\r\n\r\n*big-vs-bigdecimal.html* tests the performance of big.js against the JavaScript translations of two versions of BigDecimal, its use should be more or less self-explanatory.\r\n\r\n* [GWT: java.math.BigDecimal](https://github.com/iriscouch/bigdecimal.js)\r\n* [ICU4J: com.ibm.icu.math.BigDecimal](https://github.com/dtrebbien/BigDecimal.js)\r\n\r\nThe BigDecimal in the npm registry is the GWT version. It has some bugs, see the Node.js script *perf/lib/bigdecimal_GWT/bugs.js* for examples of flaws in its *remainder*, *divide* and *compareTo* methods.\r\n\r\n*bigtime.js* is a Node.js command-line application which tests the performance of big.js against the GWT version of\r\nBigDecimal from the npm registry.\r\n\r\nFor example, to compare the time taken by the big.js `plus` method and the BigDecimal `add` method\r\n\r\n    $ node bigtime plus 10000 40\r\n\r\nThis will time 10000 calls to each, using operands of up to 40 random digits and will check that the results match.\r\n\r\nFor help\r\n\r\n    $ node bigtime -h\r\n\r\n## Build\r\n\r\nIf [uglify-js](https://github.com/mishoo/UglifyJS2) is installed globally\r\n\r\n    $ npm install uglify-js -g\r\n\r\nthen\r\n\r\n    $ npm run build\r\n\r\nwill create *big.min.js*.\r\n\r\n## TypeScript\r\n\r\nThe [DefinitelyTyped](https://github.com/borisyankov/DefinitelyTyped) project has a Typescript type definitions file for big.js.\r\n\r\n    $ npm install @types/big.js\r\n\r\nAny questions about the TypeScript type definitions file should be addressed to the DefinitelyTyped project.\r\n\r\n## Feedback\r\n\r\nBugs/comments/questions?\r\n\r\nOpen an issue, or email <a href=\"mailto:M8ch88l@gmail.com\">Michael</a>\r\n\r\n## Licence\r\n\r\n[MIT](LICENCE)\r\n\r\n## Contributors\r\n\r\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\r\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/bigjs/contributors.svg?width=890&button=false\" /></a>\r\n\r\n\r\n## Backers\r\n\r\nThank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/bigjs#backer)]\r\n\r\n<a href=\"https://opencollective.com/bigjs#backers\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/backers.svg?width=890\"></a>\r\n\r\n\r\n## Sponsors\r\n\r\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/bigjs#sponsor)]\r\n\r\n<a href=\"https://opencollective.com/bigjs/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/0/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/1/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/2/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/3/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/4/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/5/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/6/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/7/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/8/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/bigjs/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/bigjs/sponsor/9/avatar.svg\"></a>\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MikeMcl/big.js.git"
  },
  "scripts": {
    "build": "uglifyjs big.js --source-map -c -m -o big.min.js",
    "test": "node ./test/every-test.js"
  },
  "version": "5.2.2"
}
