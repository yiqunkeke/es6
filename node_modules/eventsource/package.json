{
  "_args": [
    [
      {
        "raw": "eventsource@^1.0.7",
        "scope": null,
        "escapedName": "eventsource",
        "name": "eventsource",
        "rawSpec": "^1.0.7",
        "spec": ">=1.0.7 <2.0.0",
        "type": "range"
      },
      "D:\\coco\\es6-learn\\node_modules\\sockjs-client"
    ]
  ],
  "_from": "eventsource@^1.0.7",
  "_hasShrinkwrap": false,
  "_id": "eventsource@1.0.7",
  "_location": "/eventsource",
  "_nodeVersion": "10.8.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/eventsource_1.0.7_1535402346703_0.3313250326612529"
  },
  "_npmUser": {
    "name": "rexxars",
    "email": "espen@hovlandsdal.com"
  },
  "_npmVersion": "6.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "eventsource@^1.0.7",
    "scope": null,
    "escapedName": "eventsource",
    "name": "eventsource",
    "rawSpec": "^1.0.7",
    "spec": ">=1.0.7 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sockjs-client"
  ],
  "_resolved": "https://registry.npmjs.org/eventsource/-/eventsource-1.0.7.tgz",
  "_shasum": "8fbc72c93fcd34088090bc0a4e64f4b5cee6d8d0",
  "_shrinkwrap": null,
  "_spec": "eventsource@^1.0.7",
  "_where": "D:\\coco\\es6-learn\\node_modules\\sockjs-client",
  "author": {
    "name": "Aslak HellesÃ¸y",
    "email": "aslak.hellesoy@gmail.com"
  },
  "bugs": {
    "url": "http://github.com/EventSource/eventsource/issues"
  },
  "dependencies": {
    "original": "^1.0.0"
  },
  "description": "W3C compliant EventSource client for Node.js and browser (polyfill)",
  "devDependencies": {
    "buffer-from": "^1.1.1",
    "express": "^4.15.3",
    "mocha": "^3.5.3",
    "nyc": "^11.2.1",
    "serve-static": "^1.12.3",
    "ssestream": "^1.0.0",
    "standard": "^10.0.2",
    "webpack": "^3.5.6"
  },
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "integrity": "sha512-4Ln17+vVT0k8aWq+t/bF5arcS3EpT9gYtW66EPacdj/mAFevznsnyoHLPy2BA8gbIQeIHoPsvwmfBftfcG//BQ==",
    "shasum": "8fbc72c93fcd34088090bc0a4e64f4b5cee6d8d0",
    "tarball": "https://registry.npmjs.org/eventsource/-/eventsource-1.0.7.tgz",
    "fileCount": 14,
    "unpackedSize": 444756,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhGFrCRA9TVsSAnZWagAADW8P/RR8yx2oX70lJevugxGU\nFmfZVq/Xbi7qBOztwpEgl4yxLWJ3W3Sb6XdYcgK2eu0TmAvWxj/BZS/jbYEn\nOWHbK5rVVCcTkDh6FwpkevsqEOXChZeEd9q+jW3R9QT5gNBKTlun0PIY5Oo5\nj1n0GazE7E08CA0/zGtLl4CRfQ00ZlXw6R4AE46wQluy+RBHrcqX29bhXdHf\n8exq/cQfF9kD8Trb+q+kY6dOaJaQZGHELeOp5+QUAKbsZe5dFoTxms33QIyj\nSvbkT7Q/mVFJ/2WtVg7aSZUAyDNLROGGiM+/fblUlXHK8bcG7qNUwHBd5PJ/\nEbG+J56+n/kScFRErkm65bVIfvjHDobOyO/80tPLI7iVPPppjuXUNrYz4eSX\nRRV9WkyIe9f4fIu236xXnNrY6Dry1hS/eH3A/tsXmdQ1COLu2oDWVKY/z5WF\nZZs1h/13izc1UERhiXTWABCtlmuTuvSYyQ8bjJiOxpGpR4xu5DzYqHx6i7Fc\nS2by36Ze14Dy2n1jdCw8E00mbevzGXRcIRRYRCepR4tN4fgwSAuBu6lUVFli\n90QafbR9TqWQ/UvhjutTiqTiZyTJtRkRT3Xo5Xz/KX2tA3051L/JI52OpvuN\nUXdo2uRsree9RSbStHFe1lr8GCDGRmck7cxsbbfsDDId3hFkaPUzLpmhMwDI\nLYQB\r\n=mi34\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "gitHead": "5209cc181df083bee9d2bbab12a88f7a262fd7b7",
  "homepage": "http://github.com/EventSource/eventsource",
  "keywords": [
    "eventsource",
    "http",
    "streaming",
    "sse",
    "polyfill"
  ],
  "license": "MIT",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/EventSource/eventsource/raw/master/LICENSE"
    }
  ],
  "main": "./lib/eventsource",
  "maintainers": [
    {
      "name": "aslakhellesoy",
      "email": "aslak.hellesoy@gmail.com"
    },
    {
      "name": "rexxars",
      "email": "rexxars@gmail.com"
    }
  ],
  "name": "eventsource",
  "optionalDependencies": {},
  "readme": "# EventSource [![npm version](http://img.shields.io/npm/v/eventsource.svg?style=flat-square)](http://browsenpm.org/package/eventsource)[![Build Status](http://img.shields.io/travis/EventSource/eventsource/master.svg?style=flat-square)](https://travis-ci.org/EventSource/eventsource)[![NPM Downloads](https://img.shields.io/npm/dm/eventsource.svg?style=flat-square)](http://npm-stat.com/charts.html?package=eventsource&from=2015-09-01)[![Dependencies](https://img.shields.io/david/EventSource/eventsource.svg?style=flat-square)](https://david-dm.org/EventSource/eventsource)\n\nThis library is a pure JavaScript implementation of the [EventSource](https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events) client. The API aims to be W3C compatible.\n\nYou can use it with Node.js or as a browser polyfill for\n[browsers that don't have native `EventSource` support](http://caniuse.com/#feat=eventsource).\n\n## Install\n\n    npm install eventsource\n\n## Example\n\n    npm install\n    node ./example/sse-server.js\n    node ./example/sse-client.js    # Node.js client\n    open http://localhost:8080      # Browser client - both native and polyfill\n    curl http://localhost:8080/sse  # Enjoy the simplicity of SSE\n\n## Browser Polyfill\n\nJust add `example/eventsource-polyfill.js` file to your web page:\n\n```html\n<script src=/eventsource-polyfill.js></script>\n```\n\nNow you will have two global constructors:\n\n```javascript\nwindow.EventSourcePolyfill\nwindow.EventSource // Unchanged if browser has defined it. Otherwise, same as window.EventSourcePolyfill\n```\n\nIf you're using [webpack](https://webpack.github.io/) or [browserify](http://browserify.org/)\nyou can of course build your own. (The `example/eventsource-polyfill.js` is built with webpack).\n\n## Extensions to the W3C API\n\n### Setting HTTP request headers\n\nYou can define custom HTTP headers for the initial HTTP request. This can be useful for e.g. sending cookies\nor to specify an initial `Last-Event-ID` value.\n\nHTTP headers are defined by assigning a `headers` attribute to the optional `eventSourceInitDict` argument:\n\n```javascript\nvar eventSourceInitDict = {headers: {'Cookie': 'test=test'}};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\n### Allow unauthorized HTTPS requests\n\nBy default, https requests that cannot be authorized will cause the connection to fail and an exception\nto be emitted. You can override this behaviour, along with other https options:\n\n```javascript\nvar eventSourceInitDict = {https: {rejectUnauthorized: false}};\nvar es = new EventSource(url, eventSourceInitDict);\n```\n\nNote that for Node.js < v0.10.x this option has no effect - unauthorized HTTPS requests are *always* allowed.\n\n### HTTP status code on error events\n\nUnauthorized and redirect error status codes (for example 401, 403, 301, 307) are available in the `status` property in the error event.\n\n```javascript\nes.onerror = function (err) {\n  if (err) {\n    if (err.status === 401 || err.status === 403) {\n      console.log('not authorized');\n    }\n  }\n};\n```\n\n### HTTP/HTTPS proxy\n\nYou can define a `proxy` option for the HTTP request to be used. This is typically useful if you are behind a corporate firewall.\n\n```javascript\nvar es = new EventSource(url, {proxy: 'http://your.proxy.com'});\n```\n\n\n## License\n\nMIT-licensed. See LICENSE\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/EventSource/eventsource.git"
  },
  "scripts": {
    "coverage": "nyc --reporter=html --reporter=text _mocha --reporter spec",
    "polyfill": "webpack lib/eventsource-polyfill.js example/eventsource-polyfill.js",
    "postpublish": "git push && git push --tags",
    "test": "mocha --reporter spec && standard"
  },
  "standard": {
    "ignore": [
      "example/eventsource-polyfill.js"
    ]
  },
  "version": "1.0.7"
}
