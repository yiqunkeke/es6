{
  "_args": [
    [
      {
        "raw": "@webassemblyjs/ast@1.7.11",
        "scope": "@webassemblyjs",
        "escapedName": "@webassemblyjs%2fast",
        "name": "@webassemblyjs/ast",
        "rawSpec": "1.7.11",
        "spec": "1.7.11",
        "type": "version"
      },
      "D:\\coco\\es6-learn\\node_modules\\webpack"
    ]
  ],
  "_from": "@webassemblyjs/ast@1.7.11",
  "_hasShrinkwrap": false,
  "_id": "@webassemblyjs/ast@1.7.11",
  "_location": "/@webassemblyjs/ast",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ast_1.7.11_1540922475815_0.373421540028944"
  },
  "_npmUser": {
    "name": "xtuc",
    "email": "contact@xtuc.fr"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "@webassemblyjs/ast@1.7.11",
    "scope": "@webassemblyjs",
    "escapedName": "@webassemblyjs%2fast",
    "name": "@webassemblyjs/ast",
    "rawSpec": "1.7.11",
    "spec": "1.7.11",
    "type": "version"
  },
  "_requiredBy": [
    "/@webassemblyjs/helper-wasm-section",
    "/@webassemblyjs/wasm-edit",
    "/@webassemblyjs/wasm-gen",
    "/@webassemblyjs/wasm-opt",
    "/@webassemblyjs/wasm-parser",
    "/@webassemblyjs/wast-parser",
    "/@webassemblyjs/wast-printer",
    "/webpack"
  ],
  "_resolved": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.7.11.tgz",
  "_shasum": "b988582cafbb2b095e8b556526f30c90d057cace",
  "_shrinkwrap": null,
  "_spec": "@webassemblyjs/ast@1.7.11",
  "_where": "D:\\coco\\es6-learn\\node_modules\\webpack",
  "author": {
    "name": "Sven Sauleau"
  },
  "bugs": {
    "url": "https://github.com/xtuc/webassemblyjs/issues"
  },
  "dependencies": {
    "@webassemblyjs/helper-module-context": "1.7.11",
    "@webassemblyjs/helper-wasm-bytecode": "1.7.11",
    "@webassemblyjs/wast-parser": "1.7.11"
  },
  "description": "AST utils for webassemblyjs",
  "devDependencies": {
    "@webassemblyjs/helper-test-framework": "1.7.11",
    "array.prototype.flatmap": "^1.2.1",
    "dump-exports": "^0.1.0",
    "mamacro": "^0.0.3"
  },
  "directories": {},
  "dist": {
    "shasum": "b988582cafbb2b095e8b556526f30c90d057cace",
    "tarball": "https://registry.npmjs.org/@webassemblyjs/ast/-/ast-1.7.11.tgz",
    "integrity": "sha512-ZEzy4vjvTzScC+SH8RBssQUawpaInUdMTYwYYLh54/s8TuT0gBLuyUnppKsVyZEi876VmmStKsUs28UxPgdvrA==",
    "fileCount": 35,
    "unpackedSize": 190966,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2JxsCRA9TVsSAnZWagAA1h0QAKEeAz6YzuGSy2tXokYJ\nU1/cNgSEK9W/9R/kwexO3b3cuJ+Clgjz95v0kvR/XcIPBIsbXlslGtz5Qb/e\nJNhLTqXCqldwcHJgSp2wrlUoITyl/GvUj/NqE9QEEJM7qRMb30P9tIb3DpGO\nThxB9l8VnLdNtY4Fl3bTYmHMqsqAbanWcnONRoMvohm5ih6DAl2jHA1s6Nyw\ni+j9Cere/lriSy21iYka7tKYndZ11+ToNDB1sDvhSEyPq5tm4F4YARoBID35\nO+lJf0IkshXSZHx1RgN9pjM5AMpwXflDkvlpk4/6wh/R0SZKiH/bHB7ISuc8\nwrU176HPb8/2pCY9vghXtRby/AZGdRvXk5+kAxDOU5BeDYsADhCn/gInVdkt\n7Ohqj8+bSDMZOzMZ8m8S/qhtJXX8KJB0FV0/bGEws3yJZ3uXJmrNFp2cU6jq\n7TKpVnZpyf8VZhGOnXed8slRi55sTTtVdzMj4cQXy3CA0Enf95iHKJEgFmQI\nEGplIafWHec5c2LeVjOG+x9GnGCmlCJUFPhDfZhhL2UTG5XzByXA5EvBrCDw\n5oRj7aCJcG2PNHB3ktFgsF4FFy/lYbFFr+01S6Ukj7G2w8PNExus5U6/d1sz\nT47E6nN6RIKSe07zXTiFjCUE1ZBnZ3Ohc3+pKcEDKKTr3nf9Ht+Xc605a74E\nqYsR\r\n=z01f\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "4291990bfc4648bc6676091a955d12dc3c7e5909",
  "homepage": "https://github.com/xtuc/webassemblyjs#readme",
  "keywords": [
    "webassembly",
    "javascript",
    "ast"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "module": "esm/index.js",
  "name": "@webassemblyjs/ast",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# @webassemblyjs/ast\n\n> AST utils for webassemblyjs\n\n## Installation\n\n```sh\nyarn add @webassemblyjs/ast\n```\n\n## Usage\n\n### Traverse\n\n```js\nimport { traverse } from \"@webassemblyjs/ast\";\n\ntraverse(ast, {\n  Module(path) {\n    console.log(path.node);\n  }\n});\n```\n\n### Instruction signatures\n\n```js\nimport { signatures } from \"@webassemblyjs/ast\";\n\nconsole.log(signatures);\n```\n\n### Path methods\n\n- `findParent: NodeLocator`\n- `replaceWith: Node => void`\n- `remove: () => void`\n- `insertBefore: Node => void`\n- `insertAfter: Node => void`\n- `stop: () => void`\n\n### AST utils\n\n- function `module(id, fields, metadata)`\n- function `moduleMetadata(sections, functionNames, localNames)`\n- function `moduleNameMetadata(value)`\n- function `functionNameMetadata(value, index)`\n- function `localNameMetadata(value, localIndex, functionIndex)`\n- function `binaryModule(id, blob)`\n- function `quoteModule(id, string)`\n- function `sectionMetadata(section, startOffset, size, vectorOfSize)`\n- function `loopInstruction(label, resulttype, instr)`\n- function `instruction(id, args, namedArgs)`\n- function `objectInstruction(id, object, args, namedArgs)`\n- function `ifInstruction(testLabel, test, result, consequent, alternate)`\n- function `stringLiteral(value)`\n- function `numberLiteralFromRaw(value, raw)`\n- function `longNumberLiteral(value, raw)`\n- function `floatLiteral(value, nan, inf, raw)`\n- function `elem(table, offset, funcs)`\n- function `indexInFuncSection(index)`\n- function `valtypeLiteral(name)`\n- function `typeInstruction(id, functype)`\n- function `start(index)`\n- function `globalType(valtype, mutability)`\n- function `leadingComment(value)`\n- function `blockComment(value)`\n- function `data(memoryIndex, offset, init)`\n- function `global(globalType, init, name)`\n- function `table(elementType, limits, name, elements)`\n- function `memory(limits, id)`\n- function `funcImportDescr(id, signature)`\n- function `moduleImport(module, name, descr)`\n- function `moduleExportDescr(exportType, id)`\n- function `moduleExport(name, descr)`\n- function `limit(min, max)`\n- function `signature(params, results)`\n- function `program(body)`\n- function `identifier(value, raw)`\n- function `blockInstruction(label, instr, result)`\n- function `callInstruction(index, instrArgs)`\n- function `callIndirectInstruction(signature, intrs)`\n- function `byteArray(values)`\n- function `func(name, signature, body, isExternal, metadata)`\n- Constant`isModule`\n- Constant`isModuleMetadata`\n- Constant`isModuleNameMetadata`\n- Constant`isFunctionNameMetadata`\n- Constant`isLocalNameMetadata`\n- Constant`isBinaryModule`\n- Constant`isQuoteModule`\n- Constant`isSectionMetadata`\n- Constant`isLoopInstruction`\n- Constant`isInstruction`\n- Constant`isObjectInstruction`\n- Constant`isIfInstruction`\n- Constant`isStringLiteral`\n- Constant`isNumberLiteral`\n- Constant`isLongNumberLiteral`\n- Constant`isFloatLiteral`\n- Constant`isElem`\n- Constant`isIndexInFuncSection`\n- Constant`isValtypeLiteral`\n- Constant`isTypeInstruction`\n- Constant`isStart`\n- Constant`isGlobalType`\n- Constant`isLeadingComment`\n- Constant`isBlockComment`\n- Constant`isData`\n- Constant`isGlobal`\n- Constant`isTable`\n- Constant`isMemory`\n- Constant`isFuncImportDescr`\n- Constant`isModuleImport`\n- Constant`isModuleExportDescr`\n- Constant`isModuleExport`\n- Constant`isLimit`\n- Constant`isSignature`\n- Constant`isProgram`\n- Constant`isIdentifier`\n- Constant`isBlockInstruction`\n- Constant`isCallInstruction`\n- Constant`isCallIndirectInstruction`\n- Constant`isByteArray`\n- Constant`isFunc`\n- Constant`assertModule`\n- Constant`assertModuleMetadata`\n- Constant`assertModuleNameMetadata`\n- Constant`assertFunctionNameMetadata`\n- Constant`assertLocalNameMetadata`\n- Constant`assertBinaryModule`\n- Constant`assertQuoteModule`\n- Constant`assertSectionMetadata`\n- Constant`assertLoopInstruction`\n- Constant`assertInstruction`\n- Constant`assertObjectInstruction`\n- Constant`assertIfInstruction`\n- Constant`assertStringLiteral`\n- Constant`assertNumberLiteral`\n- Constant`assertLongNumberLiteral`\n- Constant`assertFloatLiteral`\n- Constant`assertElem`\n- Constant`assertIndexInFuncSection`\n- Constant`assertValtypeLiteral`\n- Constant`assertTypeInstruction`\n- Constant`assertStart`\n- Constant`assertGlobalType`\n- Constant`assertLeadingComment`\n- Constant`assertBlockComment`\n- Constant`assertData`\n- Constant`assertGlobal`\n- Constant`assertTable`\n- Constant`assertMemory`\n- Constant`assertFuncImportDescr`\n- Constant`assertModuleImport`\n- Constant`assertModuleExportDescr`\n- Constant`assertModuleExport`\n- Constant`assertLimit`\n- Constant`assertSignature`\n- Constant`assertProgram`\n- Constant`assertIdentifier`\n- Constant`assertBlockInstruction`\n- Constant`assertCallInstruction`\n- Constant`assertCallIndirectInstruction`\n- Constant`assertByteArray`\n- Constant`assertFunc`\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xtuc/webassemblyjs.git"
  },
  "version": "1.7.11"
}
